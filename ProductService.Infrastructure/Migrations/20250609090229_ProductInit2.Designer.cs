// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductService.Infrastructure.Data;

#nullable disable

namespace ProductService.Infrastructure.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20250609090229_ProductInit2")]
    partial class ProductInit2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductService.ApplicationCore.Entities.CategoryVariation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Category_Id");

                    b.Property<string>("VariationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Variation_Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Category_Variation");
                });

            modelBuilder.Entity("ProductService.ApplicationCore.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Product_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ProductService.ApplicationCore.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Parent_Category_Id");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Product_Category");
                });

            modelBuilder.Entity("ProductService.ApplicationCore.Entities.ProductVariationValues", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_Id");

                    b.Property<int>("VariationValueId")
                        .HasColumnType("int")
                        .HasColumnName("Variation_value_id");

                    b.HasKey("ProductId", "VariationValueId");

                    b.HasIndex("VariationValueId");

                    b.ToTable("Product_variation_values");
                });

            modelBuilder.Entity("ProductService.ApplicationCore.Entities.VariationValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryVariationId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VariationId")
                        .HasColumnType("int")
                        .HasColumnName("Variation_Id");

                    b.HasKey("Id");

                    b.HasIndex("CategoryVariationId");

                    b.ToTable("Variation_Value");
                });

            modelBuilder.Entity("ProductService.ApplicationCore.Entities.CategoryVariation", b =>
                {
                    b.HasOne("ProductService.ApplicationCore.Entities.ProductCategory", "ProductCategory")
                        .WithMany("CategoryVariation")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("ProductService.ApplicationCore.Entities.Product", b =>
                {
                    b.HasOne("ProductService.ApplicationCore.Entities.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("ProductService.ApplicationCore.Entities.ProductCategory", b =>
                {
                    b.HasOne("ProductService.ApplicationCore.Entities.ProductCategory", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("ProductService.ApplicationCore.Entities.ProductVariationValues", b =>
                {
                    b.HasOne("ProductService.ApplicationCore.Entities.Product", "Product")
                        .WithMany("ProductVariationValues")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProductService.ApplicationCore.Entities.VariationValue", "VariationValue")
                        .WithMany("ProductVariationValues")
                        .HasForeignKey("VariationValueId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("VariationValue");
                });

            modelBuilder.Entity("ProductService.ApplicationCore.Entities.VariationValue", b =>
                {
                    b.HasOne("ProductService.ApplicationCore.Entities.CategoryVariation", "CategoryVariation")
                        .WithMany("VariationValues")
                        .HasForeignKey("CategoryVariationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CategoryVariation");
                });

            modelBuilder.Entity("ProductService.ApplicationCore.Entities.CategoryVariation", b =>
                {
                    b.Navigation("VariationValues");
                });

            modelBuilder.Entity("ProductService.ApplicationCore.Entities.Product", b =>
                {
                    b.Navigation("ProductVariationValues");
                });

            modelBuilder.Entity("ProductService.ApplicationCore.Entities.ProductCategory", b =>
                {
                    b.Navigation("CategoryVariation");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("ProductService.ApplicationCore.Entities.VariationValue", b =>
                {
                    b.Navigation("ProductVariationValues");
                });
#pragma warning restore 612, 618
        }
    }
}
